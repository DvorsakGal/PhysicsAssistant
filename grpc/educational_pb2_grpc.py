# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import educational_pb2 as educational__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in educational_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EducationalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEducationalData = channel.unary_unary(
                '/educational.EducationalService/GetEducationalData',
                request_serializer=educational__pb2.GetEducationalDataRequest.SerializeToString,
                response_deserializer=educational__pb2.EducationalDataResponse.FromString,
                _registered_method=True)
        self.AddEducationalData = channel.unary_unary(
                '/educational.EducationalService/AddEducationalData',
                request_serializer=educational__pb2.AddEducationalDataRequest.SerializeToString,
                response_deserializer=educational__pb2.AddEducationalDataResponse.FromString,
                _registered_method=True)
        self.StreamEducationalData = channel.unary_stream(
                '/educational.EducationalService/StreamEducationalData',
                request_serializer=educational__pb2.StreamEducationalDataRequest.SerializeToString,
                response_deserializer=educational__pb2.EducationalData.FromString,
                _registered_method=True)
        self.DeleteEducationalData = channel.unary_unary(
                '/educational.EducationalService/DeleteEducationalData',
                request_serializer=educational__pb2.DeleteEducationalDataRequest.SerializeToString,
                response_deserializer=educational__pb2.DeleteEducationalDataResponse.FromString,
                _registered_method=True)


class EducationalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEducationalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEducationalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamEducationalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEducationalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EducationalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEducationalData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEducationalData,
                    request_deserializer=educational__pb2.GetEducationalDataRequest.FromString,
                    response_serializer=educational__pb2.EducationalDataResponse.SerializeToString,
            ),
            'AddEducationalData': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEducationalData,
                    request_deserializer=educational__pb2.AddEducationalDataRequest.FromString,
                    response_serializer=educational__pb2.AddEducationalDataResponse.SerializeToString,
            ),
            'StreamEducationalData': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamEducationalData,
                    request_deserializer=educational__pb2.StreamEducationalDataRequest.FromString,
                    response_serializer=educational__pb2.EducationalData.SerializeToString,
            ),
            'DeleteEducationalData': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEducationalData,
                    request_deserializer=educational__pb2.DeleteEducationalDataRequest.FromString,
                    response_serializer=educational__pb2.DeleteEducationalDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'educational.EducationalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('educational.EducationalService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EducationalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEducationalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/educational.EducationalService/GetEducationalData',
            educational__pb2.GetEducationalDataRequest.SerializeToString,
            educational__pb2.EducationalDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEducationalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/educational.EducationalService/AddEducationalData',
            educational__pb2.AddEducationalDataRequest.SerializeToString,
            educational__pb2.AddEducationalDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamEducationalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/educational.EducationalService/StreamEducationalData',
            educational__pb2.StreamEducationalDataRequest.SerializeToString,
            educational__pb2.EducationalData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEducationalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/educational.EducationalService/DeleteEducationalData',
            educational__pb2.DeleteEducationalDataRequest.SerializeToString,
            educational__pb2.DeleteEducationalDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
